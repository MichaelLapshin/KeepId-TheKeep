# Dev containers for local development
#
version: "3.8"

services:
  zookeeper:
    container_name: thekeep_zookeeper   # fixed container name; doern't scale as default
    image: docker.io/bitnami/zookeeper:latest
    networks:
      - keepid-net
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ZOOKEEPER_TICK_TIME=2000
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    container_name: thekeep_kafka_1   # fixed container name; doern't scale as default
    image: docker.io/bitnami/kafka:latest
    tmpfs: "/datalog"  # (not working?) to remove 'node already exists' error (https://github.com/wurstmeister/kafka-docker/issues/389)
    networks:
      - keepid-net
    ports:
      - "9093:9093"  # accessible internally anyway (within a container?)
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181    # defines connection to a zookeeper; will replace with IP internally
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
     # - KAFKA_ADVERTISED_HOST_NAME=thekeep_kafka
     # - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://thekeep_kafka_1:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper

  cassandra:
    container_name: thekeep_cassandra   # fixed container name; doern't scale as default
    image: docker.io/bitnami/cassandra:4.0
    networks:
      - keepid-net
    ports:
      - '7007:7007'
      - '9042:9042'
    volumes:
      - 'cassandra_data:/bitnami'
    environment:
      - CASSANDRA_SEEDS=cassandra
      - CASSANDRA_PASSWORD_SEEDER=yes
      - CASSANDRA_PASSWORD=cassandra

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  cassandra_data:
    driver: local

networks:
  keepid-net:
    external: false
    name: keepid-net  
